abline(model, col ='tomato', lwd=2)
summary(model)
abline(a = 1, b =5, col ='red',
lwd =1, lty =2)
library(car)
Prestige
data(Prestige)
df <- Prestige
str(df)
table(df$type)
barplot(table(df$type), col ='orange')
windows(8,6)
barplot(table(df$type), col ='orange')
hist(df$income)
hist(df$income, col = 'tomato', breaks=20)
shapiro.test(df$income)
# 히스토그램
hist(df$income, col = 'tomato', breaks=20)
hist(df$women, col = 'tomato', breaks=20)
hist(df$prestige, col = 'tomato', breaks=20)
shapiro.test(df$women)
shapiro.test(df$prestige)
shapiro.test(df$women)
shapiro.test(df$women)
shapiro.test(df$prestige)
plot(dfm[, -(5:6)], col = 'skyblue')
plot(df[, -(5:6)], col = 'skyblue')
lm(income ~ education, data = df)
cor(df[,-(5:6)])
model <- lm(income ~ education, data =df)
summary(model)
plot(income ~ education, data = df)
plot(income ~ education, data = df, pch=19, col='tomato')
abline(model, col = 'tomato', lwd=2)
abline(model, col = 'skyblue', lwd=2)
plot(income ~ education, data = df,
pch=19, col='skyblue')
abline(model, col = 'tomato', lwd=2)
model <- lm(income ~ education + women + prestige,
data = df)
summary(model)
model <- lm(income ~ education + women,
data = df)
model <- lm(income ~ education + prestige,
data = df)
summary(model)
model <- lm(income ~ education + women,
data = df)
summary(model)
model <- lm(income ~ education + women + prestige,
data = df)
summary(model)
model <- lm(income ~ education + prestige,
data = df)
summary(model)
model <- lm(income ~ prestige + women,
data = df)
summary(model)
model <- lm(income ~ education + prestige,
data = df)
summary(model)
# 다중 회구분석
library(stargazer)
# 다중 회구분석
install.packages('stargazer')
library(stargazer)
stargazer(model)
stargazer(model,type = 'text')
model <- lm(income ~ prestige + women,
data = df)
summary(model)
stargazer(model,type = 'text')
plot(model)
windows(8,6)
plot(model)
par(nrow=c(2,2))
par(vrow =c(2,2))
par(frow =c(2,2))
?par
par(mfrow =c(2,2))
plot(model)
par(nrow=c(1,1))
windows(8,6)
par(mfrow =c(2,2))
plot(model)
par(mrow=c(1,1))
model = lm(incom ~ education, data =df)
plot(income ~ education, data = df)
par(mrow=c(1,1))
par(mfrow=c(1,1))
model = lm(incom ~ education, data =df)
plot(income ~ education, data = df)
plot(income ~ education, data = df, col= 'skyblue',pch=19)
model = lm(incom ~ education+ I(education^2), data =df)
summary(model)
model = lm(incom ~ education+ I(education^2), data =df)
model = lm(income ~ education, data =df)
plot(income ~ education, data = df, col= 'skyblue',pch=19)
model = lm(income ~ education+ I(education^2), data =df)
summary(model)
abline(model)
model <-  lm(income ~ education+ I(education^2), data =df)
summary(model)
abline(model)
model <-  lm(income ~ education+ I(ecation^2), data =df)
model <-  lm(income ~ education+ I(ecaution^2), data =df)
model <-  lm(income ~ education+ I(ecuation^2), data =df)
lty = 1, lwd = 3, col = "tomato")
with(df,
with(df,
lines(arrange(data.frame(education, fitted(model)),
education),
lty = 1, lwd = 3, col = "tomato"))
with(df,
library(dplyr)
with(df,
lines(arrange(data.frame(education, fitted(model)),
education),
lty = 1, lwd = 3, col = "tomato"))
summary(model)
with(df,
lines(arrange(data.frame(education, fitted(model)),
education),
lty = 1, lwd = 3, col = "tomato"))
libaray(corrgram)
corrgram(df)
library(corrgram)
corrgram(df)
install.packages('corrgram')
library(corrgram)
corrgram(df)
lm(mpg ~ ., data =df)
summary(model)
model <- lm(mpg ~ ., data =df)
summary(model)
lm(mpg ~ ., data =df)
library(car)
lm(mpg ~ ., data =df)
car
library(car)
car
df <- mtcars[, 1:6]
lm(mpg ~ ., data =df)
model <- lm(mpg ~ ., data =df)
summary(model)
summary(model)
model <- lm(mpg ~ hp+ wt, data =df)
summary(model)
mod.selected <-  step(model, direction='backword')
mod.selected <- step(model, direction='backward')
summary(mod.selected)
df <- read,csv('../FirstMiniProject/HousePrices.csv')
df <- read.csv('../FirstMiniProject/HousePrices.csv')
df
mod.selected <- step(model, direction='backward')
mod.selected <- step(df, direction='backward')
df
str(df
str(df)
str(df)
df.lm <- lm(SalePrice~1, data=df)
mod.selected <- step(df, direction='backward')
summary(mod.selected)
mod.selected <- step(df, direction='backward')
mod.selected <- step(df.lm, direction='backward')
summary(mod.selected)
summary(mod.selected)
mod.selected
mod.selected
df.lm <- lm(SalePrice~'1', data=df)
mod.selected
df.lm <- lm(SalePrice~1, data=df,scope=list(lower~1,upper=~SalePrice))
df.lm <- lm(SalePrice~1, data=df,scope=list(lower=~1,upper=~SalePrice))
mod.selected <- step(df.lm, scope=list(lower=~1,upper=~SalePrice),direction='backward')
df.lm <- lm(data=df)
mod.selected <- step(lm(SalePrice~1,df),
scope=list(lower=~1,upper=~SalePrice),
direction='backward')
summary(mod.selected)
str(df)
df.lm <- lm(SalePrice~1,data=df)
summary(mod.selected)
mod.selected <- step(lm(SalePrice~1,df),
scope=list(lower=~1,upper=~SalePrice),
direction='backward')
summary(mod.selected)
str(df)
df.lm <- lm(Id~1,data=df)
mod.selected <- step(df.lm, direction='backward')
summary(mod.selected)
model <- lm(mpg ~ disp +drat + hp + wt,
data =df)
df <- mtcars[, 1:6]
model <- lm(mpg ~ disp +drat + hp + wt,
data =df)
mod.selected <- step(model, direction='backward')
mod.selected
summary(mod.selected)
df
df <- mtcars[, 1:6]
df
df.lm <- lm(SalePrice~(-1),data=df)
# 연습문제
# Kaggle House Price 데이터셋에서
# 다중 선형 회구의 변수 선택을 통해
# 최적의 독립 변수 조합을 찾아보시오.
# 1. 전진선택법으로 찾은 조합은? R2, Adjusted R2?
# 2. 후진선택법으로 찾은 조합은? R2, Adjusted R2?
# 상수항 선택법 : SalesPrice ~ 1
df <- read.csv('../FirstMiniProject/HousePrices.csv')
df.lm <- lm(SalePrice~(-1),data=df)
mod.selected <- step(df.lm, direction='backward')
summary(mod.selected)
str(df)
df.lm <- lm(SalePrice~SaleCondition,data=df)
mod.selected <- step(df.lm, direction='backward')
df.lm <- lm(SalePrice~Id,data=df)
mod.selected <- step(df.lm, direction='backward')
df.lm <- lm(SalePrice~Id,data=df)
mod.selected <- step(df.lm, direction='backward')
summary(mod.selected)
model <- lm(mpg ~ disp +drat + hp + wt,
data =df)
df <- mtcars[, 1:6]
model <- lm(mpg ~ disp +drat + hp + wt,
data =df)
mod.selected <- step(model, direction='backward')
summary(mod.selected)
mod.selected <- step(lm(SalePrice~1,df),
scope=list(lower=~1,upper=~SalePrice),
direction='backward')
# 연습문제
# Kaggle House Price 데이터셋에서
# 다중 선형 회구의 변수 선택을 통해
# 최적의 독립 변수 조합을 찾아보시오.
# 1. 전진선택법으로 찾은 조합은? R2, Adjusted R2?
# 2. 후진선택법으로 찾은 조합은? R2, Adjusted R2?
# 상수항 선택법 : SalesPrice ~ 1
df <- read.csv('../FirstMiniProject/HousePrices.csv')
mod.selected <- step(lm(SalePrice~1,df),
scope=list(lower=~1,upper=~SalePrice),
direction='backward')
summary(mod.selected)
df.lm <- lm(SalePrice~1,data=df)
mod.selected <- step(df.lm, direction='backward')
summary(mod.selected)
df <- read.csv('../FirstMiniProject/HousePrices.csv')
str(df)
dim(df)
is.num <- c()
for (i in 1:80){
is.num[i] <- is,numeric(df[,i])
is.num[i] <- is.numeric(df[,i])
for (i in 1:80){
is.num[i] <- is.numeric(df[,i])
}
is.num
df <- df[,is.num]
df
df <- df[,-1]
dim(df)
df <- df[complete.cases(df),]
dim(df)
str(df)
model <- lm(SalePrice~., data =df)
summary(model)
summary(model)
mod.selected <- step(model, direction = 'backward')
summary(mod.selected)
mod.selected <- step(model, direction = 'frontward')
mod.selected <- step(model, direction = 'frontward')
mod.selected <- step(model, direction = 'forward')
mod.selected <- step(model, direction = 'backward')
mod.selected <- step(model, direction = 'forward')
summary(mod.selected)
mod.selected <- step(model, direction = 'backward')
summary(mod.selected)
mod.selected <- step(model, direction = 'forward')
summary(mod.selected)
InsectSprays
df <- InsectSprays
sprays.lm <- lm(count~spray,df)
sprays.lm
model <- lm(count~spray,df)
summary(model)
str(df)
contrasts(df$spray)
df <- mtcars[,1:6]
str(df)
head(df)
table(df$cyl)
df$cyl <- factor(df$cyl)
head(df)
table(df$cyl)
lm(mpg~.,data =df)
str(df)
df <- mtcars[,1:6]
str(df)
df$cyl <- factor(df$cyl)
head(df)
table(df$cyl)
lm(mpg~.,data =df)
model <- lm(mpg~.,data =df)
summary(model)
model <- lm(mpg~.,data =df)
plot(iris[iris$Species,c(1,5)])
str(iris)
df <- split(iris,f = iris$Species)
df <- rbind(df$setosa, df$versicolor)
df <- rbind(df$setosa, df$versicolor)
df
df <- split(iris,f = iris$Species)
df
df <- rbind(df$setosa, df$versicolor)
plot(df[,c(3,5)])
library(robust)
install.packages('robust')
library(robust)
data(breslow.dat)
df <- breslow.dat
str(df)
df <- df[,C('Base','Age','Trt','SumY')]
str(df)
dim(df)
df <- df[,c('Base','Age','Trt','SumY')]
df <- df[,c('Base','Age','Trt','sumY')]
str(df)
dim(df)
glm(sumY ~., data = df, family = poisson)
summary(model)
exp(coef(model))
df <- split(iris, f = iris$Species)
df <- rbind(df$setosa, df$versicolor)
plot(df[, c(3,5)])
glm(Species ~ Petal,Length,data=df)
glm(Species ~ Petal.Length,data=df)
df$Species <- as.integer(df$Species)
glm(Species ~ Petal.Length,data=df)
glm(Species ~ Petal.Length,data=df,
family = binomial(link='logit'))
df <- split(iris, f = iris$Species)
#df$Species <- as.integer(df$Species)
glm(Species ~ Petal.Length,data=df,
family = binomial(link='logit'))
df <- rbind(df$setosa, df$versicolor)
#df$Species <- as.integer(df$Species)
glm(Species ~ Petal.Length,data=df,
family = binomial(link='logit'))
summary(model)
#df$Species <- as.integer(df$Species)
moedl <- glm(Species ~ Petal.Length,data=df,
family = binomial(link='logit'))
#df$Species <- as.integer(df$Species)
model <- glm(Species ~ Petal.Length,data=df,
family = binomial(link='logit'))
iris
margin.table(iris,1)
margin.table(iris$Species,1)
iris <- data.frame(iris)
margin.table(iris$Species,1)
margin.table(iris,1)
table(iris)
irir <- table(iris)
margin.table(iris,1)
iris <- table(iris)
margin.table(iris,1)
margin.table(iris,2)
iris
iris
data(iris)
iris
iris_t <- table(iris)
iris_t <- table(iris)
iris_t
data(iris)
iris_t <- table(iris$Sepal.Length)
iris_t
iris_t <- table(iris$Sepal.Length,iris$Sepal.Width)
iris_t
margin.table(iris_t,1)
margin.table(iris_t,2)
prop.table(iris_t)
prop.table(iris_t,1)
prop.table(iris_t,margin=1)
addmargins(iris)
addmargins(iris_t)
addmargins(iris_t,margin=1)
addmargins(prop.table(iris_t,margin=1))
addmargins(prop.table(iris_t))
margin.table(iris_t,1)
library(cats)
cats
cats
library(sleep)
library(cats)
data(cats)
install.packages('cats')
install.packages("cats")
library(cats)
cats
# 행별 or 열별 총합 구하기
margin.table(iris_t,1) # 테이블 넣어줘야함.
# 행별 or 열별 비율을 더해줌
prop.table(iris_t,margin=1)
# 행별 or 열별 비율을 더해줌
prop.table(iris_t,margin=1)
# 행별 or 열별 비율을 더해줌
prop.table(iris_t,margin=1)
# 행별 or 열별 총합 구하기
margin.table(iris_t,1) # 테이블 넣어줘야함.
#
addmargins(iris_t,1)
# 행별 or 열별 비율을 더해줌
prop.table(iris_t,1)
# 행별 or 열별 비율을 더해줌
prop.table(iris_t)
# 행 기준 or 열 기준 비율을 더해줌
prop.table(iris_t,1)
#
addmargins(iris_t,margin=1)
# 열 기준(1) or 행 기준(2)
addmargins(iris_t,margin=2)
# 행별(1) or 열별(2) 총합 구하기
margin.table(iris_t,1) # 테이블 넣어줘야함.
# 행별(1) or 열별(2) 총합 구하기
margin.table(iris_t) # 테이블 넣어줘야함.
# 행별(1) or 열별(2) 총합 구하기
margin.table(iris_t,1) # 테이블 넣어줘야함.
# 열 기준(1) or 행 기준(2)
addmargins(iris_t,margin=2)
# 행별(1) or 열별(2) 총합 구하기
margin.table(iris_t,1) # 테이블 넣어줘야함.
# 열 기준(1) or 행 기준(2)
addmargins(iris_t,margin=2)
cross.tab <- wiht(Arthritis, table(Improved, Treatment))
cross.tab <- with(Arthritis, table(Improved, Treatment))
# vcd 패키지:Arthritis 데이터셋
library(vcd)
str(Arthritis)
t.test(data=iris, Sepal.Length~Species)
t.test(data=iris, Sepal.Length~Species, conf.level=0.95)
t.test(data=iris, Species~Sepal.Length, conf.level=0.95)
iris
t.test(data=iris, Sepal.Length~Species, conf.level=0.95)
t.test(Arthritis$age~Arthritis$Sex, conf.level=0.95)
str(Arthritis)
t.test(Arthritis$age~Arthritis$Treatment, conf.level=0.95)
t.test(Arthritis$ID~Arthritis$Treatment, conf.level=0.95)
t.test(Arthritis$ID~Arthritis$Treatment, conf.level=0.99)
t.test(Arthritis$ID~Arthritis$Treatment, conf.level=0.95)
t.test(Arthritis$ID~Arthritis$Treatment, conf.level=0.99)
t.test(Arthritis$ID~Arthritis$Treatment, conf.level=0.95)
# t.test (수치형 변수 ~ 범주형변수(범주 2개여야함))
install.packages()
library()
library(help-cars)
library(help-vcd)
library(help=vcd)
?mtcars
library(help=vcd)
str(vcd)
library(vcd)
str(vcd)
# t.test (수치형 변수 ~ 범주형변수(범주 2개여야함))
install.packages('vcd')
install.packages("vcd")
str(vcd)
library(vcd)
str(vcd)
library()
plot(mtcars$mpg, mtcars$wt)
plot(mtcars$mpg, mtcars$wt, col='tomato')
plot(mtcars$mpg, mtcars$wt, col='tomato',pch=19)
?curve
?abline
lm(mtcats$mpg, mtcars$wt)
?lm
lm(mtcats$mpg~mtcars$wt)
lm(mtcars$mpg~mtcars$wt)
abline(x)
?abline
plot(mtcars$mpg,mtcars$wt)
plot(mtcars$mpg,mtcars$wt,
col='tomaot',
pch=19)
plot(mtcars$mpg,mtcars$wt,
col='tomato',
pch=19)
lm(mpg~wt,data=mtcars)
x <- lm(mpg~wt,data=mtcars)
abline(x)
abline(x,lwd=2)
abline(x,lwd=2,col='skyblue')
plot(mtcars$mpg,mtcars$wt,
col='tomato',
pch=19)
x
abline(x,lwd=2,col='skyblue')
abline(x,col='skyblue')
plot(mtcars$mpg,mtcars$wt,
col='tomato',
pch=19)
abline(x,col='skyblue')
abline(x,col='skyblue',lwd=3)
plot(mtcars$mpg,mtcars$wt,
col='tomato',
pch=19)
plot(mtcars$mpg~mtcars$wt,
col='tomato',
pch=19)
abline(x,col='skyblue',lwd=3)
mtcars$wt
